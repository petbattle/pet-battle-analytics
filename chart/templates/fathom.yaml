{{- if .Values.analytics.enabled }}
kind: List
metadata:
  resourceVersion: ""
  selfLink: "" 
apiVersion: v1
items:
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    labels:
      app: fathom
      app.kubernetes.io/component: fathom
      app.kubernetes.io/instance: pet-battle-analytics
    name: fathom
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: fathom
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: fathom
      app.kubernetes.io/component: fathom
      app.kubernetes.io/instance: pet-battle-analytics
    name: fathom
    namespace: sm-test
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
    selector:
      deployment: fathom
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"fathom:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"fathom\")].image"}]'
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: fathom
      app.kubernetes.io/component: fathom
      app.kubernetes.io/instance: pet-battle-analytics
    name: fathom
    namespace: sm-test
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        deployment: fathom
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deployment: fathom
      spec:
        containers:
        - env:
          - name: FATHOM_DATABASE_DRIVER
            value: sqlite3
          - name: FATHOM_DATABASE_NAME
            value: /tmp/fathom.sqlite
          image: usefathom/fathom:latest
          imagePullPolicy: IfNotPresent
          name: fathom
          ports:
          - containerPort: 8080
            protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: fathom
      app.kubernetes.io/component: fathom
      app.kubernetes.io/instance: pet-battle-analytics
    name: fathom
    namespace: sm-test
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: usefathom/fathom:latest
      from:
        kind: DockerImage
        name: usefathom/fathom:latest
      name: latest
      referencePolicy:
        type: Source
- apiVersion: v1
  data:
    fathom-script.js: "<!-- Fathom - simple website analytics - https://github.com/usefathom/fathom
    -->\n<script>\n(function(f, a, t, h, o, m){\n\ta[h]=a[h]||function(){\n\t\t(a[h].q=a[h].q||[]).push(arguments)\n\t};\n\to=f.createElement('script'),\n\tm=f.getElementsByTagName('script')[0];\n\to.async=1;
    o.src=t; o.id='fathom-script';\n\tm.parentNode.insertBefore(o,m)\n})(document,
    window, '//{{ (lookup "route.openshift.io/v1" "Route" .Release.Namespace "testsvc").spec.host }}/tracker.js', 'fathom');\nfathom('set',
    'siteId', 'bbb');\nfathom('trackPageview');\n</script>\n<!-- / Fathom -->\n"
  kind: ConfigMap
  metadata:
    name: fathom-config
    labels:
      app: fathom
      app.kubernetes.io/component: fathom
      app.kubernetes.io/instance: pet-battle-analytics  
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: cm-create-role
    annotations:
      "helm.sh/hook": pre-install,post-upgrade
      "helm.sh/hook-weight": "-4"
      "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
  rules:
    - apiGroups:
        - ""
      resources:
        - configmaps
      verbs:
        - create
        - list
        - delete
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: cm-create-rolebinding
    annotations:
      "helm.sh/hook": pre-install,post-upgrade
      "helm.sh/hook-weight": "-3"
      "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: cm-create-role
  subjects:
    - kind: ServiceAccount
      name: cm-create-sa
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: cm-create-sa
    annotations:
      "helm.sh/hook": pre-install,post-upgrade
      "helm.sh/hook-weight": "-2"
      "helm.sh/hook-delete-policy": hook-succeeded,hook-failed  
- apiVersion: v1
  kind: Pod
  metadata:
    name: create-site 
    annotations:
      "helm.sh/hook": post-install,post-upgrade
      "helm.sh/hook-weight": "-1"
      "helm.sh/hook-delete-policy": hook-succeeded
  spec:
    containers:
    - name: create-analytics-site 
      image: quay.io/openshift/origin-cli:4.6
      imagePullPolicy: IfNotPresent
      command: ['sh', '-cx', 'sleep 10;curl -s http://fathom:8080/api/sites -X POST -H "Accept: application/json" -H "Content-Type: application/json" -d "{\"name\":\"petbattle\"}" -o /tmp/fathom.json;oc whoami;oc create cm fathom-siteid --from-file=/tmp/fathom.json']
    restartPolicy: Never
    terminationGracePeriodSeconds: 0
    serviceAccount: cm-create-sa
    serviceAccountName: cm-create-sa
{{- end}}